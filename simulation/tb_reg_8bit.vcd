$date
	Tue Dec  1 00:27:42 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_reg_8bit $end
$var wire 8 ! out [7:0] $end
$var reg 1 " async_reset $end
$var reg 1 # clk $end
$var reg 1 $ i_en $end
$var reg 8 % in [7:0] $end
$var reg 1 & o_en $end
$scope module uut $end
$var wire 1 " async_reset $end
$var wire 1 # clk $end
$var wire 1 $ i_en $end
$var wire 8 ' in [7:0] $end
$var wire 1 & o_en $end
$var wire 8 ( out [7:0] $end
$var reg 8 ) hold [7:0] $end
$scope module buffer $end
$var wire 1 & enable $end
$var wire 8 * in [7:0] $end
$var wire 8 + out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz +
b0 *
b0 )
bz (
b11111111 '
1&
b11111111 %
0$
1#
1"
bz !
$end
#10
b0 !
b0 (
b0 +
0#
0&
b10101010 %
b10101010 '
#20
b10101010 !
b10101010 (
b10101010 +
b10101010 )
b10101010 *
1#
0"
#30
0#
#40
1#
#50
